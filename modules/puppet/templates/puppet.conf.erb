<%
  hn = scope.lookupvar( "::hostname" )
  fhn = scope.lookupvar( "::fqdn" )
  domain = scope.lookupvar( "::domain" )
-%>
# This file is controlled by puppet. Do NOT edit! #
[main]
    vardir = <%= scope.lookupvar( "puppet::params::vardir" ) %>
    logdir = <%= scope.lookupvar( "puppet::params::logdir" ) %>
    rundir = <%= scope.lookupvar( "puppet::params::rundir" ) %>
    ssldir = <%= scope.lookupvar( "puppet::params::ssldir" ) %>
    modulepath = <%= scope.lookupvar( "puppet::params::modulepath['production']" ) %>
    user = <%= scope.lookupvar( "puppet::params::user" ) %>
    group = <%= scope.lookupvar( "puppet::params::group" ) %>
    archive_files = true
    archive_file_server = <%= fhn %>

<% if @is_master == true -%>
[master]
    certname = <%= fhn %>
    dns_alt_names = puppet,puppet.<%= domain %>,<%= hn %>,<%= fhn %>
    ssl_client_header = SSL_CLIENT_S_DN
    ssl_client_verify_header = SSL_CLIENT_VERIFY
    
[testing]
    modulepath = <%= scope.lookupvar( "puppet::params::modulepath['testing']" ) %>
    manifest = <%= scope.lookupvar( "puppet::params::manifestpath['testing']" ) %>/site.pp
    
[development]
    modulepath = <%= scope.lookupvar( "puppet::params::modulepath['development']" ) %>
    manifest = <%= scope.lookupvar( "puppet::params::manifestpath['development']" ) %>/site.pp

<% end -%>
[agent]
    certname = <%= fhn %>
    server = <%= fhn %>
    report = true
    classfile = $vardir/classes.txt
    localconfig = $vardir/localconfig
    graph = true
    pluginsync = true
